"use strict";(self.webpackChunk_pascalplantey_react_js_library=self.webpackChunk_pascalplantey_react_js_library||[]).push([[4241],{"./src/stories/hooks/browser/WindowSize.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DontStartImmediately:()=>DontStartImmediately,TrackEveryPixel:()=>TrackEveryPixel,WithDefaultParameters:()=>WithDefaultParameters,__namedExportsOrder:()=>__namedExportsOrder,default:()=>WindowSize_stories});var hooks=__webpack_require__("./src/hooks/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),jsx_runtime=__webpack_require__("../scratch-app/node_modules/react/jsx-runtime.js");const WindowSize=({step,immediately})=>{const{height,width,working,toggle}=(0,hooks.iP)(step,immediately),text=`{\n  height: ${height},\n  width: ${width},\n  working: ${working}\n}`;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["Change window size to see the hook in effect",(0,jsx_runtime.jsx)("p",{children:text}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:toggle,children:"Toggle tracking"})]})};WindowSize.defaultProps={step:15,immediately:!0},WindowSize.propTypes={step:prop_types_default().number,immediately:prop_types_default().bool},WindowSize.__docgenInfo={description:"Demonstrates the useWindowSize hook  \r\n@example const { height, width, working, toggle } = useWindowSize(step, immediately)  \r\n@param {number} [step=30] Render every step pixels of window size change  \r\n@param {boolean} [immediately=true] Start tracking window size immediately?  \r\n@returns {useWindowSizeResult} { height, width, working, toggle }",methods:[],displayName:"WindowSize",props:{step:{defaultValue:{value:"15",computed:!1},description:"",type:{name:"number"},required:!1},immediately:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}}};const WindowSize_stories={title:"Hooks/Browser/useWindowSize",component:WindowSize,tags:["autodocs"]},WithDefaultParameters={args:{step:30}},DontStartImmediately={args:{immediately:!1}},TrackEveryPixel={args:{step:0}};WithDefaultParameters.parameters={...WithDefaultParameters.parameters,docs:{...WithDefaultParameters.parameters?.docs,source:{originalSource:"{\n  args: {\n    step: 30\n  }\n}",...WithDefaultParameters.parameters?.docs?.source}}},DontStartImmediately.parameters={...DontStartImmediately.parameters,docs:{...DontStartImmediately.parameters?.docs,source:{originalSource:"{\n  args: {\n    immediately: false\n  }\n}",...DontStartImmediately.parameters?.docs?.source}}},TrackEveryPixel.parameters={...TrackEveryPixel.parameters,docs:{...TrackEveryPixel.parameters?.docs,source:{originalSource:"{\n  args: {\n    step: 0\n  }\n}",...TrackEveryPixel.parameters?.docs?.source}}};const __namedExportsOrder=["WithDefaultParameters","DontStartImmediately","TrackEveryPixel"]}}]);
"use strict";(self.webpackChunk_pascalplantey_react_js_library=self.webpackChunk_pascalplantey_react_js_library||[]).push([[5385],{"./src/stories/hooks/browser/WindowWidth.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>WindowWidth_stories,useWindowWidth:()=>useWindowWidth});var hooks=__webpack_require__("./src/hooks/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),jsx_runtime=__webpack_require__("../scratch-app/node_modules/react/jsx-runtime.js");const WindowWidth=({step,immediately})=>{const{width,working,toggle}=(0,hooks.Lm)(step,immediately),text=`{\n  width: ${width},\n  working: ${working}\n}`;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["Change window width to see the hook in effect",(0,jsx_runtime.jsx)("p",{children:text}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:toggle,children:"Toggle tracking"})]})};WindowWidth.defaultProps={step:30,immediately:!0},WindowWidth.propTypes={step:prop_types_default().number,immediately:prop_types_default().bool},WindowWidth.__docgenInfo={description:"Demonstrates the useWindowWidth hook  \r\n@example const { width, working, toggle } = useWindowWidth(step, immediately)  \r\n@param {number} [step=30] Render every step pixels of window width change  \r\n@param {boolean} [immediately=true] Start tracking window height immediately?  \r\n@returns {object} { width, working, toggle }",methods:[],displayName:"WindowWidth",props:{step:{defaultValue:{value:"30",computed:!1},description:"",type:{name:"number"},required:!1},immediately:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}}};const WindowWidth_stories={title:"Hooks/Browser/useWindowWidth",component:WindowWidth,tags:["autodocs"]},useWindowWidth={};useWindowWidth.parameters={...useWindowWidth.parameters,docs:{...useWindowWidth.parameters?.docs,source:{originalSource:"{}",...useWindowWidth.parameters?.docs?.source}}};const __namedExportsOrder=["useWindowWidth"]}}]);
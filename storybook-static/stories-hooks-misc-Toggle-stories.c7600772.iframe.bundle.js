"use strict";(self.webpackChunk_pascalplantey_react_js_library=self.webpackChunk_pascalplantey_react_js_library||[]).push([[612],{"./src/stories/hooks/misc/Toggle.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ToggleDemonstration:()=>ToggleDemonstration,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Toggle_stories});var hooks=__webpack_require__("./src/hooks/index.js"),jsx_runtime=__webpack_require__("../scratch-app/node_modules/react/jsx-runtime.js");const Toggle=()=>{const[visible,toggle]=(0,hooks.OT)(!0);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:toggle,children:visible?"Hide":"Show"}),(0,jsx_runtime.jsx)("p",{style:{marginTop:"20px"},children:visible&&"Message is visible"})]})};Toggle.__docgenInfo={description:"Demonstrates the useToggle hook  \r\n@example  \r\nconst [visible, toggleShow] = useToggle(true);  \r\nreturn(  \r\n  <>  \r\n    {visible && 'Message is visible'}  \r\n    \\<button onClick={toggle}>{visible ? 'Hide' : 'Show'}</button>  \r\n  </>  \r\n);",methods:[],displayName:"Toggle"};const Toggle_stories={title:"Hooks/Misc/useToggle",component:Toggle,tags:["autodocs"]},ToggleDemonstration={};ToggleDemonstration.parameters={...ToggleDemonstration.parameters,docs:{...ToggleDemonstration.parameters?.docs,source:{originalSource:"{}",...ToggleDemonstration.parameters?.docs?.source}}};const __namedExportsOrder=["ToggleDemonstration"]}}]);